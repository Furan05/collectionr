<div class="card-detail-container">
  <div class="card-info">
    <div class="card-image" data-tilt data-tilt-glare data-tilt-max-glare="0.4">
      <img src="<%= @card_info["images"]["large"] %>" alt="<%= @card_info["name"] %>">
    </div>

    <div class="card-stats">
      <h1><%= @card_info["name"] %></h1>

      <div class="price-history">
        <h2>Évolution des prix</h2>
        <canvas id="priceChart"></canvas>
      </div>

      <div class="stats-grid">
        <div class="stat-item">
          <h3>Set</h3>
          <p><%= @card_info["set"]["name"] %></p>
        </div>

        <div class="stat-item">
          <h3>Rarity</h3>
          <p><%= @card_info["rarity"] %></p>
        </div>

        <div class="stat-item">
          <h3>Artist</h3>
          <p><%= @card_info["artist"] %></p>
        </div>

        <div class="stat-item">
          <h3>Number</h3>
          <p><%= @card_info["number"] %>/<%= @card_info["set"]["total"] %></p>
        </div>
      </div>

      <% if @card_info["attacks"] %>
        <div class="attacks">
          <h3>Attacks</h3>
          <% @card_info["attacks"].each do |attack| %>
            <div class="attack">
              <h4><%= attack["name"] %></h4>
              <p><%= attack["text"] %></p>
            </div>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<%# Ajout de Chart.js %>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const ctx = document.getElementById('priceChart');
    const priceData = <%= raw @price_history.to_json %>;

    new Chart(ctx, {
      type: 'line',
      data: {
        labels: priceData.map(d => d.date),
        datasets: [{
          label: 'Prix de la carte (€)',
          data: priceData.map(d => d.price),
          borderColor: '#f8c471',
          backgroundColor: 'rgba(248, 196, 113, 0.1)',
          borderWidth: 2,
          tension: 0.4,
          fill: true,
          pointRadius: 0,
          pointHoverRadius: 6,
          pointHoverBackgroundColor: '#f8c471',
          pointHoverBorderColor: '#fff',
          pointHoverBorderWidth: 2
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            display: false
          }
        },
        scales: {
          y: {
            beginAtZero: false,
            grid: {
              display: false
            },
            ticks: {
              font: {
                size: 12
              }
            }
          },
          x: {
            grid: {
              display: false
            },
            ticks: {
              font: {
                size: 12
              },
              maxTicksLimit: 6,
              maxRotation: 0
            }
          }
        },
        interaction: {
          intersect: false,
          mode: 'index'
        }
      }
    });
  });
  </script>
